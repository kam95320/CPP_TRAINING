# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    consigne.txt                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: kahoumou <kahoumou@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/05/06 13:43:47 by kahoumou          #+#    #+#              #
#    Updated: 2025/05/06 13:43:56 by kahoumou         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Parfait, Kamel ğŸ§ 

Tu es maintenant techniquement et mentalement prÃªt Ã  coder une classe Admin qui hÃ©rite proprement de User.
ğŸ§© RÃ©sumÃ© de ce que tu dois faire :
ğŸ”¨ Fichiers Ã  crÃ©er :

    Admin.hpp

    Admin.cpp

    Modifier main.cpp pour tester

âœ… Dans Admin.hpp :

    HÃ©riter publiquement de User

    Ajouter un attribut privÃ© : std::string role

    Ajouter :

        Un constructeur

        Un destructeur

        set_role(std::string)

        get_role() const

        display_admin()

âœ… Dans Admin.cpp :

    ImplÃ©mente chaque mÃ©thode

    Utilise les getters de User pour accÃ©der Ã  username et age

    Appelle set_username() ou set_age() dans le constructeur si tu veux

âœ… Dans main.cpp :

Test simple :

Admin admin;
admin.set_username("Kamel");
admin.set_age(28);
admin.set_role("Superviseur");

admin.display_admin();

Tu peux utiliser les couleurs, afficher [Admin created], [Admin destroyed], comme pour User.

Quand tu as terminÃ©, envoie-moi tes fichiers, et je corrigerai ligne par ligne comme un professeur.
Bonne chance ğŸ‘Š
