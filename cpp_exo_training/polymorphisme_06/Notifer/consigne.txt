# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    consigne.txt                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: kahoumou <kahoumou@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/05/07 15:41:36 by kahoumou          #+#    #+#              #
#    Updated: 2025/05/07 15:44:08 by kahoumou         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

ChatGPT said:

Super, Kamel ! üí™
Tu as bien assimil√© la th√©orie, alors attaquons l'exercice.
üìù EXERCICE : Syst√®me de Notification avec Polymorphisme
üéØ Objectif :

Cr√©er un syst√®me de notification polymorphe qui envoie des messages de diff√©rentes mani√®res (par email, par SMS, par notification push).
üß© Plan de l'exercice :

    Classe de base : Notifier

        M√©thode virtuelle :

            virtual void send(const std::string& message) const = 0;

            La m√©thode est pure virtuelle (car on veut que chaque d√©riv√© la red√©finisse).

    Classes d√©riv√©es :

        EmailNotifier

            M√©thode send() envoie un email.

        SMSNotifier

            M√©thode send() envoie un SMS.

        PushNotifier

            M√©thode send() envoie une notification push.

    Fonction main :

        Cr√©er un tableau de pointeurs de type Notifier*.

        Associer chaque pointeur √† une instance d'une classe d√©riv√©e (EmailNotifier, SMSNotifier, PushNotifier).

        Appeler la m√©thode send() pour chaque notifier.

üö¶ Indications :

    Utilise le mot-cl√© override pour chaque m√©thode send() des classes d√©riv√©es.

    La m√©thode send() doit afficher un message de la forme :

        Email : Envoi de "message" par email.

        SMS : Envoi de "message" par SMS.

        Push : Envoi de "message" par notification push.

    Utilise un tableau de pointeurs pour stocker les objets polymorphes.

    N'oublie pas de supprimer les objets √† la fin.

üí™ √Ä toi de jouer !
D√®s que tu as fini, envoie-moi ton code et je te donnerai des retours d√©taill√©s.
